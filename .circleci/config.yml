version: 2.1

orbs:
  win: circleci/windows@4.0.0

workflows:
  version: 2
  test_and_build:
    jobs:
      - test-cli
      - test-gui
      - build-win64:
          requires:
            - test-cli
            - test-gui
      - build-win32:
          requires:
            - test-cli
            - test-gui
      - build-macos:
          requires:
            - test-cli
            - test-gui
      # - build-snapcraft:
      #     requires:
      #       - test-cli
      #       - test-gui

jobs:
  test-cli:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get -y install tor obfs4proxy
            pip install poetry
            cd ~/repo/cli
            poetry install
      - run:
          name: Run tests
          command: |
            cd ~/repo/cli
            poetry run pytest -v ./tests
            poetry run onionshare-cli --local-only ./tests --auto-stop-timer 2
            poetry run onionshare-cli --local-only --receive --auto-stop-timer 2
            poetry run onionshare-cli --local-only --website ../docs --auto-stop-timer 2
            poetry run onionshare-cli --local-only --chat --auto-stop-timer 2

  test-gui:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y tor obfs4proxy gcc python3-dev python3-pyside2.qtcore python3-pyside2.qtwidgets python3-pyside2.qtgui
            sudo apt-get install -y xvfb x11-utils libxkbcommon-x11-0 libxcb-randr0-dev libxcb-xtest0-dev libxcb-xinerama0-dev libxcb-shape0-dev libxcb-xkb-dev libxcb-render-util0 libxcb-icccm4 libxcb-keysyms1 libxcb-image0
            cd ~/repo/desktop
            poetry install
      - run:
          name: Run tests
          command: |
            cd ~/repo/desktop
            QT_DEBUG_PLUGINS=1 xvfb-run poetry run pytest -v ./tests/test_gui_*.py

  build-win64:
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - checkout
      - run:
          name: Install Python 3.9.12
          command: |
            choco install python3 --version=3.9.12
      - run:
          name: Install poetry
          command: (Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python -
      - run:
          name: Install poetry dependencies
          command: |
            cd ~\project\desktop
            poetry install
      - run:
          name: Get tor
          command: |
            cd ~\project\desktop
            poetry run python .\scripts\get-tor.py
      - run:
          name: Build meek
          command: |
            cd ~\project\desktop
            python .\scripts\build-meek-client.py
      - run:
          name: Build OnionShare
          command: |
            cd ~\project\desktop
            poetry run python .\setup-freeze.py build
            poetry run python .\scripts\build-windows.py cleanup-build
      - run:
          name: Compress
          command: |
            mv ~\project\desktop\build\exe.win-amd64-3.9\ ~\onionshare-win64
            Compress-Archive -LiteralPath ~\onionshare-win64 -DestinationPath ~\onionshare-win64.zip
      - store_artifacts:
          path: ~\onionshare-win64.zip

  build-win32:
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - checkout
      - run:
          name: Install Python 3.9.12 (32-bit)
          command: |
            choco install python3 --params "/InstallDir32:C:\Python-32bit" --version=3.9.12
      - run:
          name: Install golang (32-bit)
          command: |
            cd ~\Downloads
            Invoke-WebRequest -Uri https://go.dev/dl/go1.18.windows-386.msi -OutFile go1.18.windows-386.msi
            msiexec.exe /i go1.18.windows-386.msi /quiet /L*V go-install.log
      - run:
          name: Install poetry (32-bit)
          command: C:\Python-32bit\Scripts\pip install poetry
      - run:
          name: Install poetry dependencies
          command: |
            cd ~\project\desktop
            C:\Python-32bit\Scripts\poetry install
      - run:
          name: Get tor
          command: |
            cd ~\project\desktop
            C:\Python-32bit\Scripts\poetry run python .\scripts\get-tor.py
      - run:
          name: Build meek
          command: |
            cd ~\project\desktop
            C:\Python-32bit\python .\scripts\build-meek-client.py
      - run:
          name: Build OnionShare
          command: |
            cd ~\project\desktop
            C:\Python-32bit\Scripts\poetry run python .\setup-freeze.py build
            C:\Python-32bit\Scripts\poetry run python .\scripts\build-windows.py cleanup-build
      - run:
          name: Compress
          command: |
            mv ~\project\desktop\build\exe.win32-3.9\ ~\onionshare-win32
            Compress-Archive -LiteralPath ~\onionshare-win32 -DestinationPath ~\onionshare-win32.zip
      - store_artifacts:
          path: ~\onionshare-win32.zip

  build-macos:
    macos:
      xcode: 12.5.1
    steps:
      - checkout
      - run:
          name: Install Homebrew dependencies
          command: |
            brew install wget
            brew install go
      - run:
          name: Install Python 3.9.12
          command: |
            wget https://www.python.org/ftp/python/3.9.12/python-3.9.12-macos11.pkg -O ~/Downloads/python.pkg
            sudo installer -pkg ~/Downloads/python.pkg -target /
      - run:
          name: Install poetry
          command: |
            pip3 install poetry
            ln -s /Library/Frameworks/Python.framework/Versions/3.9/bin/poetry /usr/local/bin
      - run:
          name: Install poetry dependencies
          command: |
            cd ~/project/desktop
            poetry install
      - run:
          name: Get tor
          command: |
            cd ~/project/desktop
            poetry run python ./scripts/get-tor.py
      - run:
          name: Build meek
          command: |
            cd ~/project/desktop
            ./scripts/build-meek-client.py
      - run:
          name: Build OnionShare
          command: |
            cd ~/project/desktop
            poetry run python ./setup-freeze.py build
            poetry run python ./setup-freeze.py bdist_mac
            poetry run python ./scripts/build-macos.py cleanup-build
      - run:
          name: Compress
          command: |
            zip -r ~/onionshare-macos.zip ~/project/desktop/build/exe.macosx-10.9-universal2-3.9
            zip -r ~/onionshare-app-macos.zip ~/project/desktop/build/OnionShare.app
      - store_artifacts:
          path: ~/onionshare-macos.zip
      - store_artifacts:
          path: ~/onionshare-app-macos.zip

  # build-snapcraft:
  #   docker:
  #     - image: snapcore/snapcraft:stable
  #   working_directory: ~/repo
  #   steps:
  #     - checkout
  #     - run:
  #         name: Install extra snaps without snapd
  #         command: |
  #           mkdir ~/tmp
  #           install_snap () { cd ~/tmp && snap download $1 && mkdir -p /snap/$1 && unsquashfs -d /snap/$1/current *.snap && rm ~/tmp/*; }
  #           install_snap "core18"
  #           install_snap "go"
  #           install_snap "gnome-3-34-1804"
  #           install_snap "gnome-3-34-1804-sdk"
  #     - run:
  #         name: Build the snap
  #         command: |
  #           cd ~/repo
  #           snapcraft
  #           mv onionshare-*_amd64.snap ~/onionshare_amd64.snap
  #     - store_artifacts:
  #         path: ~/onionshare_amd64.snap
